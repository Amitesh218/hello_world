BRUTE FORCE METHOD:
##############################################################################################################################################
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        for (int i=0; i <nums.size(); i++){
            for (int j=i+1; j<nums.size(); j++){
                if ( target-nums[i] == nums[j])
                    return {i,j};
            }
        }
    return {-1,-1};
    }
};
##############################################################################################################################################

LESS TIME COMPLEXITY: O(n)

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> hashTable;
        for (int i =0; i <nums.size(); i++){
            int complement = target - nums[i];
            if (hashTable.count(complement)){
                return {hashTable[complement],i};
            }
            hashTable[nums[i]] = i;
        }
        return{};
    }
};
